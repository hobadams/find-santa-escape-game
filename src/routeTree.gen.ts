/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/_index'
import { Route as GameImport } from './routes/game'
import { Route as GameIndexImport } from './routes/game/index'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as GameStepStepIndexImport } from './routes/game/step/$step/index'

// Create Virtual Routes

const IndexIntroIndexLazyImport = createFileRoute('/_index/intro/')()
const IndexCompleteIndexLazyImport = createFileRoute('/_index/complete/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const GameRoute = GameImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRoute,
} as any)

const GameIndexRoute = GameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GameRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexRoute,
} as any)

const IndexIntroIndexLazyRoute = IndexIntroIndexLazyImport.update({
  id: '/intro/',
  path: '/intro/',
  getParentRoute: () => IndexRoute,
} as any).lazy(() =>
  import('./routes/_index/intro/index.lazy').then((d) => d.Route),
)

const IndexCompleteIndexLazyRoute = IndexCompleteIndexLazyImport.update({
  id: '/complete/',
  path: '/complete/',
  getParentRoute: () => IndexRoute,
} as any).lazy(() =>
  import('./routes/_index/complete/index.lazy').then((d) => d.Route),
)

const GameStepStepIndexRoute = GameStepStepIndexImport.update({
  id: '/step/$step/',
  path: '/step/$step/',
  getParentRoute: () => GameRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameImport
      parentRoute: typeof rootRoute
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof IndexImport
    }
    '/game/': {
      id: '/game/'
      path: '/'
      fullPath: '/game/'
      preLoaderRoute: typeof GameIndexImport
      parentRoute: typeof GameImport
    }
    '/_index/complete/': {
      id: '/_index/complete/'
      path: '/complete'
      fullPath: '/complete'
      preLoaderRoute: typeof IndexCompleteIndexLazyImport
      parentRoute: typeof IndexImport
    }
    '/_index/intro/': {
      id: '/_index/intro/'
      path: '/intro'
      fullPath: '/intro'
      preLoaderRoute: typeof IndexIntroIndexLazyImport
      parentRoute: typeof IndexImport
    }
    '/game/step/$step/': {
      id: '/game/step/$step/'
      path: '/step/$step'
      fullPath: '/game/step/$step'
      preLoaderRoute: typeof GameStepStepIndexImport
      parentRoute: typeof GameImport
    }
  }
}

// Create and export the route tree

interface IndexRouteChildren {
  IndexIndexRoute: typeof IndexIndexRoute
  IndexCompleteIndexLazyRoute: typeof IndexCompleteIndexLazyRoute
  IndexIntroIndexLazyRoute: typeof IndexIntroIndexLazyRoute
}

const IndexRouteChildren: IndexRouteChildren = {
  IndexIndexRoute: IndexIndexRoute,
  IndexCompleteIndexLazyRoute: IndexCompleteIndexLazyRoute,
  IndexIntroIndexLazyRoute: IndexIntroIndexLazyRoute,
}

const IndexRouteWithChildren = IndexRoute._addFileChildren(IndexRouteChildren)

interface GameRouteChildren {
  GameIndexRoute: typeof GameIndexRoute
  GameStepStepIndexRoute: typeof GameStepStepIndexRoute
}

const GameRouteChildren: GameRouteChildren = {
  GameIndexRoute: GameIndexRoute,
  GameStepStepIndexRoute: GameStepStepIndexRoute,
}

const GameRouteWithChildren = GameRoute._addFileChildren(GameRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof IndexRouteWithChildren
  '/game': typeof GameRouteWithChildren
  '/': typeof IndexIndexRoute
  '/game/': typeof GameIndexRoute
  '/complete': typeof IndexCompleteIndexLazyRoute
  '/intro': typeof IndexIntroIndexLazyRoute
  '/game/step/$step': typeof GameStepStepIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexIndexRoute
  '/game': typeof GameIndexRoute
  '/complete': typeof IndexCompleteIndexLazyRoute
  '/intro': typeof IndexIntroIndexLazyRoute
  '/game/step/$step': typeof GameStepStepIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_index': typeof IndexRouteWithChildren
  '/game': typeof GameRouteWithChildren
  '/_index/': typeof IndexIndexRoute
  '/game/': typeof GameIndexRoute
  '/_index/complete/': typeof IndexCompleteIndexLazyRoute
  '/_index/intro/': typeof IndexIntroIndexLazyRoute
  '/game/step/$step/': typeof GameStepStepIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/game'
    | '/'
    | '/game/'
    | '/complete'
    | '/intro'
    | '/game/step/$step'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/game' | '/complete' | '/intro' | '/game/step/$step'
  id:
    | '__root__'
    | '/_index'
    | '/game'
    | '/_index/'
    | '/game/'
    | '/_index/complete/'
    | '/_index/intro/'
    | '/game/step/$step/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRouteWithChildren
  GameRoute: typeof GameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRouteWithChildren,
  GameRoute: GameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_index",
        "/game"
      ]
    },
    "/_index": {
      "filePath": "_index.tsx",
      "children": [
        "/_index/",
        "/_index/complete/",
        "/_index/intro/"
      ]
    },
    "/game": {
      "filePath": "game.tsx",
      "children": [
        "/game/",
        "/game/step/$step/"
      ]
    },
    "/_index/": {
      "filePath": "_index/index.tsx",
      "parent": "/_index"
    },
    "/game/": {
      "filePath": "game/index.tsx",
      "parent": "/game"
    },
    "/_index/complete/": {
      "filePath": "_index/complete/index.lazy.tsx",
      "parent": "/_index"
    },
    "/_index/intro/": {
      "filePath": "_index/intro/index.lazy.tsx",
      "parent": "/_index"
    },
    "/game/step/$step/": {
      "filePath": "game/step/$step/index.tsx",
      "parent": "/game"
    }
  }
}
ROUTE_MANIFEST_END */
